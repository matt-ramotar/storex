name: Publish Artifacts

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  publish:
    if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/main' && github.repository == 'matt-ramotar/storex' }}
    runs-on: macos-latest

    strategy:
      matrix:
        module-config:
          - name: "core"
            version_key: "storex-core"
            version_env: "CORE_VERSION_NAME"
            path: ":core"
          - name: "mutations"
            version_key: "storex-mutations"
            version_env: "MUTATIONS_VERSION_NAME"
            path: ":mutations"
          - name: "paging"
            version_key: "storex-paging"
            version_env: "PAGING_VERSION_NAME"
            path: ":paging"
          - name: "normalization-runtime"
            version_key: "storex-normalization"
            version_env: "NORMALIZATION_VERSION_NAME"
            path: ":normalization:runtime"
          - name: "normalization-ksp"
            version_key: "storex-normalization"
            version_env: "NORMALIZATION_VERSION_NAME"
            path: ":normalization:ksp"
          - name: "resilience"
            version_key: "storex-resilience"
            version_env: "RESILIENCE_VERSION_NAME"
            path: ":resilience"
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Grant execute permission for Gradlew
        run: chmod +x gradlew

      - name: Set Version Environment Variables
        run: |
          # Extract version from libs.versions.toml based on the version_key
          VERSION=$(grep "^${{ matrix.module-config.version_key }} = " gradle/libs.versions.toml | sed 's/.*= "\(.*\)"/\1/')
          echo "${{ matrix.module-config.version_env }}=$VERSION" >> $GITHUB_ENV
          echo "Extracted version for ${{ matrix.module-config.name }}: $VERSION"          

      - name: Publish Artifacts to Maven Central
        if: ${{ !endsWith(env[matrix.module-config.version_env], '-SNAPSHOT') }}
        run: ./gradlew ${{ matrix.module-config.path }}:publishAndReleaseToMavenCentral --no-configuration-cache
        env:
          ORG_GRADLE_PROJECT_mavenCentralUsername: ${{ secrets.SONATYPE_USERNAME }}
          ORG_GRADLE_PROJECT_mavenCentralPassword: ${{ secrets.SONATYPE_PASSWORD }}
          ORG_GRADLE_PROJECT_signingInMemoryKey: ${{ secrets.SIGNING_KEY }}
          ORG_GRADLE_PROJECT_signingInMemoryKeyPassword: ${{ secrets.SIGNING_PASSWORD }}
